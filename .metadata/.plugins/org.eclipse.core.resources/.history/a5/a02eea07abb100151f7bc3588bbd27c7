import java.util.Queue;

public class GerundPhrase extends Argument {
	
	//only if gerund is transitive
	private Argument directOb; //weird if GerundPhrase
	
	//head must be a present participle (gerund)
	public void setHead(String s) {
		
		head = s;
	}
	
	public void setDirectOb(Argument dirOb) {
		
	}
	
	public void setMod(Modifier m) {
		
	}
	
	public void ReadIn(Queue<String> word) {
		
		setHead(word.poll());
		
		if(head == "transitive")
		{
			if (word.peek() == "det, adv, adj, or noun")
			{
				NounPhrase nPh = new NounPhrase();
				nPh.ReadIn(word);
				setDirectOb(nPh);
			}
			//should resolve whether Modifier is to gerund(head) or DO
			else if (word.peek() == "to")
			{
				//a little weird
				InfinitivePhrase inf = new InfinitivePhrase();
				inf.ReadIn(word);
				setDirectOb(inf);
			}
			else if (word.peek() == "gerund")
			{
				//REALLY weird
				GerundPhrase ger = new GerundPhrase();
				ger.ReadIn(word);
				setDirectOb(ger);
			}
			else
			{
				//ERROR, need a DO
			}
		}
		//if can be transitive OR intransitive, wait and see if there is a DO or not
		while (word.peek() == "prep or rel pro")
		{
			if (word.peek() == "prep")
			{
				//Read in prepositional phrase
			}
			if (word.peek() == "rel pro")
			{
				//Read in relative clause
			} 
			//maybe possibly could be subordinate clause?
		}
		//should resolve whether (other) modifiers mod gerund(head), Arg of DO, or Args of modifiers
	}
	
}
