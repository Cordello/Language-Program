import java.util.Queue;

public class Predicate {

	private VerbPhrase verb;
	private Argument directOb;
	private Modifier mod;
	
	public void setVerb(VerbPhrase v) {
		verb = v;
	}
	
	public void setDirectOb(Argument dirOb) {
		directOb = dirOb;
	}
	
	public void setMod(Modifier m) {
		mod = m;
	}
	
	public void ReadIn(Queue<String> word) {
		
		VerbPhrase v = new VerbPhrase();
		v.ReadIn(word);
		setVerb(v);
		
		if (v.getVerb() == "transitive")
		{
			if (word.peek() == "det, adv, adj, or noun")
			{
				NounPhrase nPh = new NounPhrase();
				nPh.ReadIn(word);
				setDirectOb(nPh);
			}
			else if (word.peek() == "to")
			{
				InfinitivePhrase inf = new InfinitivePhrase();
				inf.ReadIn(word);
				setDirectOb(inf);
			}
			else if (word.peek() == "gerund")
			{
				GerundPhrase ger = new GerundPhrase();
				ger.ReadIn(word);
				setDirectOb(ger);
			}
			else
			{
				//ERROR, need a DO
			}
		}
		//if can be transitive OR intransitive, wait and see if there is a DO or not
		
		if (word.peek() == "prep or sub conj")
		{
			if (word.peek() == "prep")
			{
				//Read in prepositional phrase
			}
			else if (word.peek() == "sub conj")
			{
				//Read in subordinate clause
			}
		}
	}
}
